{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vsamsonov\\\\Desktop\\\\SocialWeb\\\\src\\\\components\\\\Profile\\\\Posts\\\\Posts.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport AddPostForm from \"./AddPostForm\";\nimport { DeleteButton, Item, ItemImage, PostWrapper } from \"./Posts.styles\";\n\nvar Posts = function Posts() {\n  _s();\n\n  var maxID = 0; // const addPost = (text: string) => {\n  //     const newPost = createPost(text)\n  //     const newArray = [...posts, newPost]\n  //     setPost(newArray)\n  // }\n\n  var createPost = function createPost(label) {\n    var newPost = createPost(label);\n    var newArray = [].concat(_toConsumableArray(posts), [newPost]);\n    setPost(newArray);\n    return {\n      Author: 'Владислав Самсонов',\n      Message: label,\n      Avatar: 'https://d2zia2w5autnlg.cloudfront.net/46235/5ec33ee77313a-large',\n      id: maxID++\n    };\n  };\n\n  var _useState = useState([createPost('Проверка 1'), createPost('Проверка 2'), createPost('Проверка 3')]),\n      posts = _useState[0],\n      setPost = _useState[1];\n\n  var deletePost = function deletePost(id) {\n    setPost(posts.filter(function (post) {\n      return post.id !== id;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(AddPostForm, {\n      addPost: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), posts.map(function (userPost) {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        children: [/*#__PURE__*/_jsxDEV(ItemImage, {\n          src: userPost.Avatar,\n          alt: \"\\u0424\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u044F \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: userPost.Author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userPost.Message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          type: \"button\",\n          className: \"btn btn-outline-danger\",\n          title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\",\n          onClick: function onClick() {\n            return deletePost(userPost.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, _this)]\n      }, userPost.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return console.log(posts, maxID);\n      },\n      children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Posts, \"v9vuVgFdVYSxt90oZUJLCr/w8A8=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/vsamsonov/Desktop/SocialWeb/src/components/Profile/Posts/Posts.tsx"],"names":["useState","AddPostForm","DeleteButton","Item","ItemImage","PostWrapper","Posts","maxID","createPost","label","newPost","newArray","posts","setPost","Author","Message","Avatar","id","deletePost","filter","post","map","userPost","console","log"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,EAAuBC,IAAvB,EAA6BC,SAA7B,EAAwCC,WAAxC,QAA2D,gBAA3D;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAEhB,MAAIC,KAAK,GAAG,CAAZ,CAFgB,CAIhB;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAoB;AAEnC,QAAMC,OAAO,GAAGF,UAAU,CAACC,KAAD,CAA1B;AACA,QAAME,QAAQ,gCAAOC,KAAP,IAAcF,OAAd,EAAd;AACAG,IAAAA,OAAO,CAACF,QAAD,CAAP;AAEA,WAAO;AACHG,MAAAA,MAAM,EAAE,oBADL;AAEHC,MAAAA,OAAO,EAAEN,KAFN;AAGHO,MAAAA,MAAM,EAAE,iEAHL;AAIHC,MAAAA,EAAE,EAAEV,KAAK;AAJN,KAAP;AAMH,GAZD;;AAVgB,kBAwBOP,QAAQ,CAAC,CAC5BQ,UAAU,CAAC,YAAD,CADkB,EAE5BA,UAAU,CAAC,YAAD,CAFkB,EAG5BA,UAAU,CAAC,YAAD,CAHkB,CAAD,CAxBf;AAAA,MAwBXI,KAxBW;AAAA,MAwBJC,OAxBI;;AA+BhB,MAAMK,UAAU,GAAG,SAAbA,UAAa,CAACD,EAAD,EAAgB;AAC/BJ,IAAAA,OAAO,CAACD,KAAK,CAACO,MAAN,CAAa,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACH,EAAL,KAAYA,EAAtB;AAAA,KAAb,CAAD,CAAP;AACH,GAFD;;AAIA,sBACI,QAAC,WAAD;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAET;AAAtB;AAAA;AAAA;AAAA;AAAA,aADJ,EAEKI,KAAK,CAACS,GAAN,CAAU,UAACC,QAAD;AAAA,0BACP,QAAC,IAAD;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,QAAQ,CAACN,MAAzB;AAAiC,UAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA,oBAAKM,QAAQ,CAACR;AAAd;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAA,oBAAIQ,QAAQ,CAACP;AAAb;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII,QAAC,YAAD;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,SAAS,EAAC,wBAFd;AAGI,UAAA,KAAK,EAAC,qEAHV;AAII,UAAA,OAAO,EAAE;AAAA,mBAAMG,UAAU,CAACI,QAAQ,CAACL,EAAV,CAAhB;AAAA;AAJb;AAAA;AAAA;AAAA;AAAA,iBAJJ;AAAA,SAAWK,QAAQ,CAACL,EAApB;AAAA;AAAA;AAAA;AAAA,eADO;AAAA,KAAV,CAFL,eAcI;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMM,OAAO,CAACC,GAAR,CAAYZ,KAAZ,EAAmBL,KAAnB,CAAN;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAkBH,CArDD;;GAAMD,K;;KAAAA,K;AAuDN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\nimport AddPostForm from \"./AddPostForm\";\r\nimport { DeleteButton, Item, ItemImage, PostWrapper } from \"./Posts.styles\";\r\n\r\nconst Posts = () => {\r\n\r\n    let maxID = 0\r\n    \r\n    // const addPost = (text: string) => {\r\n    //     const newPost = createPost(text)\r\n    //     const newArray = [...posts, newPost]\r\n    //     setPost(newArray)\r\n    // }\r\n\r\n    const createPost = (label : string) => {\r\n\r\n        const newPost = createPost(label)\r\n        const newArray = [...posts, newPost]\r\n        setPost(newArray)\r\n\r\n        return {\r\n            Author: 'Владислав Самсонов',\r\n            Message: label,\r\n            Avatar: 'https://d2zia2w5autnlg.cloudfront.net/46235/5ec33ee77313a-large',\r\n            id: maxID++\r\n        }\r\n    }\r\n\r\n    let [posts, setPost] = useState([\r\n        createPost('Проверка 1'),\r\n        createPost('Проверка 2'),\r\n        createPost('Проверка 3')\r\n    ])\r\n\r\n\r\n    const deletePost = (id: number) => {\r\n        setPost(posts.filter((post) => post.id !== id))\r\n    }\r\n\r\n    return (\r\n        <PostWrapper >\r\n            <AddPostForm addPost={createPost}/>\r\n            {posts.map((userPost) => (\r\n                <Item key={userPost.id}>\r\n                    <ItemImage src={userPost.Avatar} alt='Фотография профиля'/>\r\n                    <h5>{userPost.Author}</h5>\r\n                    <p>{userPost.Message}</p>\r\n                    <DeleteButton \r\n                        type='button'\r\n                        className=\"btn btn-outline-danger\"\r\n                        title=\"Удалить пост\"\r\n                        onClick={() => deletePost(userPost.id)}/>\r\n                </Item>\r\n            ))}\r\n            <button onClick={() => console.log(posts, maxID)}>Проверка</button>\r\n        </PostWrapper>\r\n    )\r\n}\r\n\r\nexport default Posts"]},"metadata":{},"sourceType":"module"}